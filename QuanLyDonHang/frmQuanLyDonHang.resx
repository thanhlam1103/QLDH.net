<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAADwAAAAAAAAAAAAAAAAAAAIIAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD3AAAAMQAAAAAAAAAAAAAAEQAAAMsAAADpAAAAmwAAAOgAAADlAAAA6gAAANcAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAcwAAAP8AAABOAAAAAAAAABQAAADOAAAA6gAAANMAAADwAAAAhgAAAIAAAADsAAAAvAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWAAAA/wAAAE4AAAAOAAAA0QAAAOgAAAAsAAAACAAAABEAAAAAAAAAAAAA
        AKYAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAD/AAAATgAAAEwAAAD/AAAAMwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAApgAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAAAP8AAABOAAAATgAAAP8AAAAWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACmAAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAA/wAAAE4AAABOAAAA/wAA
        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
        AAUAAABmAAAA0AAAALwAAAAAAAAAagAAAHoAAAB6AAAAegAAAHoAAAB6AAAAegAAAHoAAAB6AAAAegAA
        AHoAAAB6AAAAegAAAHoAAAB6AAAAegAAAA8AAAAAAAAAFgAAAP8AAABOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACmAAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAA/wAAAE4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAD/AAAATgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApgAAALwAAAAAAAAApAAAAL0AAAC9AAAAvQAA
        AL0AAAC9AAAAvQAAAL0AAAC9AAAAvQAAAL0AAAC9AAAAvQAAAL0AAAC9AAAAvQAAABgAAAAAAAAAFgAA
        AP8AAABOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAAAAvAAAAAAAAACRAAAApwAA
        AKcAAACnAAAApwAAAKcAAACnAAAApwAAAKcAAACnAAAApwAAAKcAAACnAAAApwAAAKcAAACnAAAAFQAA
        AAAAAAAWAAAA/wAAAE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYAAAC8AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABYAAAD/AAAATgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApgAA
        ALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAAAP8AAABOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACmAAAAvAAAAAAAAAB+AAAASwAAAAwAAACRAAAALAAAACwAAACRAAAAkQAAAJEAAACRAAAAkQAA
        AJEAAABeAAAAAAAAAAAAAABZAAAAiAAAAIgAAACSAAAA/wAAAE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAKYAAAC8AAAAAAAAALcAAABuAAAAEgAAANMAAABAAAAAQAAAANMAAADTAAAA0wAA
        ANMAAADTAAAA0wAAAIkAAAAAAAAALQAAAP8AAADTAAAA0wAAAP8AAAD1AAAAJAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAApgAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDAAAA/wAAACcAAACyAAAA9gAAAEQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmAAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEMAAAD/AAAAzQAAAPUAAABCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYAAADXAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAjgAAAP8AAAD1AAAAQgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA7gAA
        AEIAAAAAAAAAAAAAAAAAAAAA5wAAAMAAAACAP//4Az//+B8///gfP//4AyAACAEgAAgAP//4HAHACB4A
        wAgf+MAIH/z/+A+AwAiHAMAIwx/ACOE///jwP//4+CAACPwgAAj/P//4/z//+P8gAAj/IAAI/z//+P8/
        //j/IADA/yAAgP8//4H/P/+D/wAAB/8AAA97InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>